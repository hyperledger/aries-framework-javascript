name: Continuous Integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      releaseType:
        description: The type of release. Should be one of "major", "minor", "patch"
        required: true
        default: 'patch'

env:
  TEST_AGENT_PUBLIC_DID_SEED: 000000000000000000000000Trustee9
  GENESIS_TXN_PATH: network/genesis/local-genesis.txn

# Make sure we're not running multiple release steps at the same time as this can give issues with determining the next npm version to release.
# Ideally we only add this to the 'release' job so it doesn't limit PR runs, but github can't guarantee the job order in that case:
# "When concurrency is specified at the job level, order is not guaranteed for jobs or runs that queue within 5 minutes of each other."
concurrency: aries-framework-${{ github.ref }}-${{ github.repository }}-${{ github.event_name }}

jobs:
  validate:
    runs-on: ubuntu-20.04
    name: Validate
    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2

      # setup dependencies
      - name: Setup Libindy
        uses: ./.github/actions/setup-libindy

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Linting
        run: yarn lint

      - name: Prettier
        run: yarn check-format

      - name: Compile
        run: yarn compile

  integration-test:
    runs-on: ubuntu-20.04
    name: Integration Tests

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2

      # setup dependencies
      - name: Setup Libindy
        uses: ./.github/actions/setup-libindy
      - name: Setup Indy Pool
        uses: ./.github/actions/setup-indy-pool
        with:
          seed: ${TEST_AGENT_PUBLIC_DID_SEED}
      - name: Run mediator agents
        uses: ./.github/actions/run-mediator-agents

      # TODO: move to action once https://github.com/actions/runner/issues/646 is resolved
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: TEST_AGENT_PUBLIC_DID_SEED=${TEST_AGENT_PUBLIC_DID_SEED} GENESIS_TXN_PATH=${GENESIS_TXN_PATH} yarn test --coverage --detectOpenHandles

      - name: Export logs
        if: always()
        run: |
          mkdir logs
          docker cp alice-mediator:/www/logs.txt ./logs/alice-mediator.txt
          docker cp bob-mediator:/www/logs.txt ./logs/bob-mediator.txt
          docker cp alice-ws-mediator:/www/logs.txt ./logs/alice-ws-mediator.txt
          docker cp bob-ws-mediator:/www/logs.txt ./logs/bob-ws-mediator.txt

      - name: Upload docker logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: docker-logs
          path: logs

      - uses: codecov/codecov-action@v1
        if: always()

  release:
    runs-on: ubuntu-20.04
    name: Release
    needs: [integration-test, validate]
    # Only run on push or workflow dispatch to main branch
    if: (github.ref == 'refs/heads/main' && github.repository == 'hyperledger/aries-framework-javascript') && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # setup dependencies
      - name: Setup Libindy
        uses: ./.github/actions/setup-libindy

      - name: git config
        run: |
          git config user.name "@github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      # https://github.com/yarnpkg/yarn/issues/6617#issuecomment-436222106
      - name: Prepend Node path
        run: npm config set scripts-prepend-node-path true

      - name: Set Verbose Logging
        run: npm config set loglevel verbose --global

      - name: Set NPM config
        run: |
          echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # On push to master, release unstable version
      - name: Release Unstable
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn release patch --preRelease=unstable -VV

      # On manual workflow dispatch release stable version
      - name: Release Stable
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn release ${{ github.event.inputs.releaseType }}
