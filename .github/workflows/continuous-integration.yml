name: Continuous Integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      releaseType:
        description: The type of release. Should be one of "major", "minor", "patch"
        required: true
        default: 'patch'

env:
  TEST_AGENT_PUBLIC_DID_SEED: 000000000000000000000000Trustee9
  GENESIS_TXN_PATH: network/genesis/local-genesis.txn

jobs:
  integration-test:
    runs-on: ubuntu-20.04
    name: Integration Tests
    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2

      - name: Get docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11

      - name: Start indy pool
        run: |
          docker build -f network/indy-pool.dockerfile -t indy-pool .
          docker run -d --name indy-pool -p 9701-9708:9701-9708 indy-pool
          docker exec indy-pool indy-cli-setup

      - name: Register DID on ledger
        run: docker exec indy-pool add-did-from-seed "${TEST_AGENT_PUBLIC_DID_SEED}"

      - name: Build framework docker image
        run: docker build -t aries-framework-javascript .

      - name: Run lint and format validation
        run: docker run aries-framework-javascript yarn validate

      - name: Start mediator agents
        run: docker-compose -f docker/docker-compose-mediators.yml up -d

      - name: Run tests
        run: >-
          docker run
          --network host
          --name framework-jest-tests
          --env TEST_AGENT_PUBLIC_DID_SEED=${TEST_AGENT_PUBLIC_DID_SEED}
          --env GENESIS_TXN_PATH=${GENESIS_TXN_PATH}
          aries-framework-javascript
          yarn test --coverage

      - name: Export logs
        if: always()
        run: |
          mkdir logs
          docker cp alice-mediator:/www/logs.txt ./logs/alice-mediator.txt
          docker cp bob-mediator:/www/logs.txt ./logs/bob-mediator.txt
          docker cp framework-jest-tests:/www/logs.txt ./logs/jest.txt

      - name: Upload docker logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: docker-logs
          path: logs

      - name: Export test coverage
        if: always()
        run: docker cp framework-jest-tests:/www/coverage ./
      - uses: codecov/codecov-action@v1
        if: always()

  release:
    runs-on: ubuntu-20.04
    name: Release
    needs: [integration-test]
    # Only run on push or workflow dispatch to main branch
    if: (github.ref == 'refs/heads/main') && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: git config
        run: |
          git config user.name "@github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'

      # https://github.com/yarnpkg/yarn/issues/6617#issuecomment-436222106
      - name: Prepend Node path
        run: npm config set scripts-prepend-node-path true

      - name: Install dependencies
        run: yarn install --ignore-optional --frozen-lockfile

      # On push to master, release unstable version
      - name: Release Unstable
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release patch --preRelease=unstable

      # On manual workflow dispatch release stable version
      - name: Release Stable
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release ${{ github.event.inputs.releaseType }}
